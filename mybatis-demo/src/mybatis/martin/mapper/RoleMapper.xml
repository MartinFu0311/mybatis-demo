<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.martin.mapper.RoleMapper">
  <resultMap type="role" id="roleMap">
  	<id property="id" column="id" javaType="long" jdbcType="BIGINT" />
  	<result property="roleName" column="role_name" javaType="string" jdbcType="VARCHAR" />
  	<result property="note" column="note" typeHandler="mybatis.martin.util.typeHandler.MyStringTypeHandler" />
  </resultMap>
  
  <sql id="roleCols">
  	id, role_name as roleName, note
  </sql>
  
  <select id="getRole" parameterType="long" resultType="role">
    select id, role_name as roleName, note from t_role where id = #{id}
  </select>
  
  <select id="findRole" parameterType="string" resultMap="roleMap">
  	select id, role_name, note 
  	from t_role
  	where role_name like concat('%', #{roleName javaType=string, jdbcType=VARCHAR, typeHandler=mybatis.martin.util.typeHandler.MyStringTypeHandler}, '%')
  </select>
  
  <select id="findRolesByMap" parameterType="map" resultType="role">
  	select id, role_name as roleName, note 
  	from t_role
  	where role_name like concat('%', #{roleName}, '%') and note like concat('%', #{note}, '%')
  </select>
  
  <!-- 使用 @Param 传递参数，这里就不需要设置 paramterType，而是让  mybatis 自己检测就可以了 -->
  <select id="findRolesByAnnotation" resultType="role">
  	select <include refid="roleCols" /> 
  	from t_role
  	where role_name like concat('%', #{roleName}, '%') and note like concat('%', #{note}, '%')
  </select>
  
  <!-- 使用 bean 传递参数 -->
  <select id="findRolesByBean" parameterType="roleParams" resultType="role">
  	select id, role_name as roleName, note 
  	from t_role
  	where role_name like concat('%', #{roleName}, '%') and note like concat('%', #{note}, '%')
  </select>
  
  <!-- 使用混合方式传递参数 -->
  <select id="findRolesByMix" resultType="role">
  	select id, role_name as roleName, note 
  	from t_role
  	where role_name like concat('%', #{params.roleName}, '%') and note like concat('%', #{params.note}, '%')
  	limit #{page.start}, #{page.limit}
  </select>
  
  <!-- <insert id="insertRole" parameterType="role" useGeneratedKeys="true" keyProperty="id">
  	insert into t_role(role_name, note) values(#{roleName}, #{note})
  </insert> -->
  <insert id="insertRole" parameterType="role">  <!-- 这种写法在设置了主键自增的情况下也可以使用 -->
  	<selectKey keyProperty="id" resultType="long" order="BEFORE">
  		select if (max(id) = null, 1, max(id) + 3) from t_ROLE
  	</selectKey>
  	insert into t_role(id, role_name, note) values(#{id}, #{roleName}, #{note})
  </insert>
  
  <delete id="deleteRole" parameterType="long">
  	delete from t_role where id = #{id}
  </delete>
</mapper>